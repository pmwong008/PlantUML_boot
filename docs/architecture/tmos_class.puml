@startuml

title TMOS Class Diagram

abstract class User {
    - string username <<PK>>
    - string user_email
    - string first_name
    - string last_name
    + boolean is_staff()
    + boolean is_active()
    - dateTime date_joined

}
class CustomUser {
	+ imageField avatar (null=True, blank=True)
}

class Order {
    - int Order_id <<PK>>
    - string User <<FK>>
    - int Product_id <<FK>>
    - string address
    + boolean state (default=False)
    + dateTime created_at (auto_now_add=True)
}

class OrderItem {
    - int Item_id <<PK>>
    - int OrderId <<FK>> -- References Order.OrderId
    - int ProductId <<FK>> -- References Product.ProductId
    + int Quantity()
}

class Perfumes {
    - int id <<PK>>
    - string name
	- string brand
	- string image
    - string launch_year
    - jsonField main_accords
    - jsonField notes
    - jsonField longevity
    - jsonField sillage
    + int QuantityAvailable(quantity)
    + int UpdateInventory(quantity)
    class metaclass:
        managed = True
        db_table = 'perfumes'
}

class Review {
    - int Review_id <<PK>>
    - int Perfume <<FK>> -- References Product.ProductId
    - string User <<FK>> -- References CustomUser.username
    - int gender
    - int price_value
    - int longevity
    - int sillage
    - int season
    - int Rating (1 to 5)
    - text Content
    - dateTime created_at (auto_now_add=True)
    class metaclass:
        unique_together = ('user', 'perfume') 
      
}

class CourierService {
  + ProcessOrder()
}

class SupplierService {
  + NotifySupplier(OrderItem orderItem)
}


class Post {
}

class Points extends CustomUser{
    + Commenting()
    + Rating()
}

CustomUser "1" -> "*" Order : places
CustomUser --> User : references
Order "1" --> "*" OrderItem : contains
OrderItem "1" -> "*" Perfume : "references"
SupplierService -> CourierService : initiates
CourierService ---> User : "references"
CourierService --> Post

OrderItem --> SupplierService : "requests"

@enduml
